
Step 1
---
yarn add jsonwebtoken
yarn add cors  
--

Step 2: In node app.js
---
.
.
var jwt    = require('jsonwebtoken'); // used to create, sign, and verify tokens
var cors = require('cors')

.
.
app.set('superSecret', 'trainingIsGood');
app.use(cors());
.
.
app.use(function(req, res, next) {
    // check header or url parameters or post parameters for token
  var token = req.body.token || req.param('token') || req.headers['x-access-token'];
  // decode token
  if (token) {
    // verifies secret and checks exp
    jwt.verify(token, app.get('superSecret'), function(err, decoded) {      
      if (err) {
        return res.json({ success: false, message: 'Failed to authenticate token.' });    
      } else {
        // if everything is good, save to request for use in other routes
        req.decoded = decoded;  
        next();
      }
    });

  } else {
    // if there is no token
    // return an error
    return res.status(403).send({ 
      success: false, 
      message: 'No token provided.'
    });
  }
});
/*
app.use(function(req, res, next) {
  console.log("This is my check point for user / autorization");
  if(typeof(req.session.user) == 'string'){
    next(); 
  }else{
    res.redirect("/login");
  }
});
*/
.
..
.
----
var jwt    = require('jsonwebtoken'); // used to create, sign, and verify tokens
var express = require('express');
var router = express.Router();

router.get('/', function(req, res, next) {
  res.send('respond with a resource');
});

router.post('/authenticate', function(req, res, next) {
  console.log(JSON.stringify(req.body));
  if(req.body.username != undefined && req.body.username!="" 
  	&& req.body.username == req.body.password){
      var payload = {
        admin: req.body.username	
      }
      //generating token
      var token = jwt.sign(payload,"trainingIsGood", {
        expiresIn: 86400 // expires in 24 hours
      });
      res.json({
        success: true,
        message: 'Enjoy your token!',
        token: token
      });
  }else{
  	res.send({result:'fail', msg:"Incorrect uername or password." });
  }
});

module.exports = router;
-----


