import React, { useState } from "react";
import {getCustomers,deleteCustomer} from "../service/CustomerAPI";

import { Image, FlatList, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity, View, Button } from "react-native";
import AppMenu  from '../components/AppMenu';

var DATA = [];
const Customers = (props) => {
  const [selectedId, setSelectedId] = useState(null);
  const [counter, setCounter] = useState(0);
  
  const Item = ({ item, onPress, style }) => (
    <TouchableOpacity onPress={onPress} style={[styles.item, style]}>
      <View
        style={{
          flexDirection: "column",
          height: 100
        }}
      >
        <View style={ {flex: 2 }} >
        <View style={ {flex: 2, flexDirection: "row",}} >
          <View style={ {flex: 6}} >
            <Text style={styles.title}>{item.name}</Text>
          </View>
          <View style={ {flex: 1}} >
            <TouchableOpacity onPress={(item)=>{
            }}>
            <Image
            style={styles.tinyLogo}
            source={{
              uri: 'http://training.pyther.com/icons/edit.png?9',
            }}
          />
          </TouchableOpacity>
         </View>
          <View style={ {flex: 1}} >
          <TouchableOpacity onPress={()=>{
              deleteCustomer(item.id).then(()=>{
                getCustomers().then(
                  (result)=>{
                    DATA=result;
                    console.log("props.navigation.addListener..."+DATA.length);
                    setCounter(Date.now());
                  }
                );
              })
            }}>
            <Image
            style={styles.tinyLogo}
            source={{
              uri: 'http://training.pyther.com/icons/delete.png',
            }}
          />
          </TouchableOpacity>
          </View>
        </View>
        </View>
        <View style={ {flex: 2,padding:2, flexDirection: "row",}} >
          <View style={ {flex: 2}} >
            <Text>{item.email}</Text>
          </View>
          <View style={ {flex: 2}} >
            <Text>{item.phone}</Text>
          </View>
        </View>
        <View style={{flex: 1}} >
          <Text>{item.address}</Text>
        </View>
        </View>
    </TouchableOpacity>
  );

  React.useEffect(() => {
    const unsubscribe = props.navigation.addListener('focus', () => {
      getCustomers().then(
        (result)=>{
          console.log(JSON.stringify(result));
          DATA=result;
          console.log("props.navigation.addListener..."+DATA.length);
          setCounter(Date.now());
        }
      );
    });
    return unsubscribe;
  }, [props.navigation]);

  const renderItem = ({ item }) => {
    const backgroundColor = item.id === selectedId ? "#6e3b6e" : "#f9c2ff";
    return (
      <Item
        item={item}
        onPress={() => setSelectedId(item.id)}
        style={{ backgroundColor }}
      />
    );
  };

  return (
    <View>
      <AppMenu  navigation={props.navigation}/>
      <View style={{flexDirection:"row"}}>
      <Button title="Add Customer" onPress={()=>{
        props.navigation.navigate('AddCustomer');
       }}>
       </Button>
        <Button title="Refresh" onPress={()=>{
        DATA = customerLocal.getCustomers();
        console.log("customer Array length:"+DATA.length);
        setCounter(counter+1);
       }}>
       </Button>
      </View>
      <FlatList
        data={DATA}
        renderItem={renderItem}
        keyExtractor={(item) => item.id}
        extraData={selectedId}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: StatusBar.currentHeight || 0,
  },
  item: {
    padding: 20,
    marginVertical: 8,
    marginHorizontal: 16,
  },
  tinyLogo: {
    width: 30,
    height: 30,
  },
  title: {
    fontSize: 32,
  },
});

export default Customers;

