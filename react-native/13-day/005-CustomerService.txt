
var service = {};
const API_BASEURL = 'http://training.pyther.com:4000/api/customers';

let customers = [
    {"id":"1","name":"Vivek Singhwal","email":"vivek@pyther.com","phone":"565656565","address":"India"},
    {"id":"2","name":"Rama","email":"rama@pyther.com","phone":"565656565","address":"India"},
    ];
  service.getCustomers = function(){
    return customers;
  }
  
  service.addCustomer = function(customer){
    customers.push(customer);
    console.log("customers"+JSON.stringify(customers));
  }
  service.deleteCustomer = function(id){
    var tempItem = [];
    for(var i=0;i < customers.length; i++ ){
        if(id != customers[i].id){
            tempItem.push(customers[i]);  
        }
    }
    customers = tempItem;
}

service.getCustomerById = function(id){
    for(var i=0;i < customers.length; i++ ){
        if(id == customers[i].id){
          return customers[i];
        }
    }
    return {};
}
  /*
service.getCustomers = async function(){
    let response = await fetch(API_BASEURL);
    let customers = await response.json();
    return customers;
  }

/*

service.addCustomer = function(customer){
  console.log("customer::"+JSON.stringify(customer))
	let promise = new Promise((resolve, reject) => {
    fetch(API_BASEURL,{ method: 'post',
      headers: {
      'Content-Type': 'application/json'
     },
      body: JSON.stringify(customer)})
        .then(res => res.json())
        .then(
          (result) => {
            console.log("result:"+JSON.stringify(result));
            resolve(result);
          },
          // Note: it's important to handle errors here
          // instead of a catch() block so that we don't swallow
          // exceptions from actual bugs in components.
          (error) => {
            reject(error);
            console.error("Error"+JSON.stringify(error));
          });
      });
    return promise;
}/*
https://javascript.info/async-await
async function showAvatar() {

  // read our JSON
  let response = await fetch('/article/promise-chaining/user.json');
  let user = await response.json();

  // read github user
  let githubResponse = await fetch(`https://api.github.com/users/${user.name}`);
  let githubUser = await githubResponse.json();

  // show the avatar
  let img = document.createElement('img');
  img.src = githubUser.avatar_url;
  img.className = "promise-avatar-example";
  document.body.append(img);

  // wait 3 seconds
  await new Promise((resolve, reject) => setTimeout(resolve, 3000));

  img.remove();

  return githubUser;
}
service.addCustomer = async function(customer){
  let response = await fetch(API_BASEURL,{ method: 'post',
  headers: {
  'Content-Type': 'application/json'
 },
  body: JSON.stringify(customer)});
  let result = await response.json();
  return result;
}*/

/*
service.getCustomers = async function(){
    let response = await fetch(API_BASEURL);
    let customers = await response.json();
    return customers;
  }
*/
  /*
service.getCustomers = function(){
    let promise = new Promise((resolve, reject) => {
      fetch(API_BASEURL)
          .then(res => res.json())
          .then(
            (result) => {
              console.log("result:"+JSON.stringify(result));
              resolve(result);
            },
            // Note: it's important to handle errors here
            // instead of a catch() block so that we don't swallow
            // exceptions from actual bugs in components.
            (error) => {
              reject(error);
              console.error("Error"+JSON.stringify(error));
            });
        });
      return promise;
    }
/*
service.getCustomers = function(callback){
    fetch(API_BASEURL)
    .then((response) => response.json())
    .then((responseJson) => {
      console.log(JSON.stringify(responseJson));
      callback(responseJson);
    })
    .catch((error) => {
      console.error(error);
    });
    return customers;// []
}*/

export default service;
